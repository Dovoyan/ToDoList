{"version":3,"sources":["components/ToDoItem.js","components/ToDoList.js","App.js","index.js"],"names":["TodoItem","item","itemDelete","itemUpdate","inputEl","useRef","checkedEl","ref","onChange","id","current","value","order","checked","title","type","name","onClick","ToDoList","useState","items","setItems","currentCard","setCurrentCard","fetch","method","then","response","json","data","newItem","headers","body","JSON","stringify","dragEndHandler","e","currentTarget","style","background","useEffect","console","log","length","itemAdd","className","sort","a","b","map","index","onDragStart","onDragLeave","onDragEnd","onDragOver","preventDefault","dragOverHandler","onDrop","card","dropHandler","draggable","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72c7f811.chunk.js","sourcesContent":["import { useRef } from 'react'\r\n\r\nexport function TodoItem({ item, itemDelete, itemUpdate }) {\r\n    const inputEl = useRef(null)\r\n    const checkedEl = useRef(null)\r\n\r\n    return (\r\n\r\n        <div>\r\n            <input ref={inputEl} onChange={() => { itemUpdate(item.id, inputEl.current.value, item.order, checkedEl.current.checked) }} value={item.title} />\r\n            <input ref={checkedEl} onChange={() => { itemUpdate(item.id, inputEl.current.value, item.order, checkedEl.current.checked) }} checked={item.checked} type=\"checkbox\" id=\"scales\" name=\"scales\" />\r\n            <button onClick={() => { itemDelete(item.id) }}>delete</button>\r\n        </div>\r\n    )\r\n\r\n}","import { useRef, useState, useEffect } from 'react'\r\nimport { TodoItem } from './ToDoItem'\r\n\r\n\r\n\r\nexport function ToDoList() {\r\n    const [items, setItems] = useState([])\r\n    const [currentCard, setCurrentCard] = useState(null)\r\n    const inputEl = useRef(null)\r\n\r\n    useEffect(() => {\r\n        fetch('https://kovalenkau-to-do.herokuapp.com/todo')\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setItems(data)\r\n                console.log(data);\r\n            })\r\n    }, []);\r\n\r\n    function itemAdd() {\r\n        const newItem = { title: inputEl.current.value, order: items.length + 1, checked: false };\r\n        fetch('https://kovalenkau-to-do.herokuapp.com/todo', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newItem)\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((data) => {\r\n                setItems([...items, data])\r\n            })\r\n    }\r\n\r\n    function itemDelete(id) {\r\n        fetch(`https://kovalenkau-to-do.herokuapp.com/todo/${id}`, {\r\n            method: 'DELETE',\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((data) => {\r\n                setItems(data)\r\n            })\r\n    }\r\n\r\n    function itemUpdate(id, title, order, checked) {\r\n        const newItem = { title: title, order: order, id: id, checked: checked }\r\n        fetch(`https://kovalenkau-to-do.herokuapp.com/todo`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newItem)\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((data) => {\r\n                setItems(data)\r\n            })\r\n    }\r\n\r\n\r\n    function dragSartHandler(e, card) {\r\n        setCurrentCard(card)\r\n    }\r\n\r\n    function dragEndHandler(e) {\r\n        e.currentTarget.style.background = 'tomato'\r\n    }\r\n\r\n    function dragOverHandler(e) {\r\n        e.preventDefault()\r\n        e.currentTarget.style.background = 'lightgray'\r\n    }\r\n\r\n    function dropHandler(e, card) {\r\n        e.preventDefault()\r\n        setItems(items.map(item => {\r\n            if (item.id === card.id) {\r\n                itemUpdate(card.id, card.title, currentCard.order, card.checked)\r\n                return { ...item, order: currentCard.order }\r\n            }\r\n            if (item.id === currentCard.id) {\r\n                itemUpdate(currentCard.id, currentCard.title, card.order, currentCard.checked)\r\n                return { ...item, order: card.order }\r\n            }\r\n            return item\r\n        }))\r\n        e.currentTarget.style.background = 'tomato'\r\n    }\r\n\r\n    const sortCards = (a, b) => {\r\n        return a.order > b.order ? 1 : -1\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => { itemAdd() }}>Add</button><input ref={inputEl} />\r\n            <div className=\"itemTable\">\r\n                {\r\n                    items.sort(sortCards).map((item, index) => {\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                onDragStart={(e) => dragSartHandler(e, item)}\r\n                                onDragLeave={(e) => dragEndHandler(e)}\r\n                                onDragEnd={(e) => dragEndHandler(e)}\r\n                                onDragOver={(e) => dragOverHandler(e)}\r\n                                onDrop={(e) => dropHandler(e, item)}\r\n                                className=\"todoItem\"\r\n                                draggable={true}\r\n                            >\r\n                                <TodoItem item={item} itemDelete={itemDelete} itemUpdate={itemUpdate} />\r\n                            </div>\r\n                        )\r\n                    })\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import './App.css';\nimport { ToDoList } from './components/ToDoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}